[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

[tool.isort]
balanced_wrapping = true
default_section = "THIRDPARTY"
include_trailing_comma = true
line_length = 120
multi_line_output = 3
skip = ["__init__.py"]
use_parentheses = true

[tool.mypy]
cache_dir = ".mypy_cache"
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
exclude = ["migrations"]
implicit_optional = true
namespace_packages = true
plugins = ["pydantic.mypy"]
show_error_codes = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_ignores = true

[tool.poetry]
authors = ["kolenkoal <kolenko.alexander0@gmail.com>"]
description = ""
name = "event-organizer"
package-mode = false
readme = "README.md"
version = "0.1.0"

[tool.poetry.dependencies]
fastapi = "^0.114.2"
pydantic = "^2.9.1"
pydantic-settings = "^2.5.2"
python = "^3.12"
urllib3 = "^2.2.3"
uvicorn = "^0.30.6"
uvloop = "^0.20.0"

[tool.poetry.group.dev.dependencies]
isort = "^5.13.2"
mypy = "^1.11.2"
pytest = "^8.3.3"
pytest-deadfixtures = "^2.2.1"
ruff = "^0.6.5"
toml-sort = "^0.23.1"

[tool.pydantic-mypy]
init_firbid_extra = true
warn_untyped_fields = true

[tool.pytest.ini_options]
addopts = "--strict-markers --showlocals --verbosity 2"
asyncio_mode = "auto"
filterwarnings = [
  "ignore:Deprecated call to `pkg_resources\\.declare_namespace\\('.*'\\):DeprecationWarning",
  "ignore:`input_variables' is deprecated and ignored.",
  "ignore:coroutine 'Request.json' was never awaited",
  "ignore:pkg_resources is deprecated as an API"
]
log_level = "DEBUG"

[tool.ruff]
exclude = [
  "*/migrations",
  ".git",
  ".venv"
]
indent-width = 4
line-length = 120
target-version = "py312"

[tool.ruff.format]
docstring-code-format = false
docstring-code-line-length = "dynamic"
indent-style = "space"
line-ending = "auto"
quote-style = "double"
skip-magic-trailing-comma = false

[tool.ruff.lint]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
fixable = ["ALL"]
ignore = []
select = ["E4", "E7", "E9", "ERA001", "F", "T20"]
unfixable = []
